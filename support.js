import bot from "./bot.js";
import { findContentByID } from "./models/content.js";
import { findUserByChatId } from "./models/user.js";
import values from "./values.js";

const orderManager = () => {
    const activeOrderSessions = new Map();

    bot.on("callback_query", async (query) => {
        const chatId = query.message.chat.id;
        const userId = query.from.id;
        const username = query.from.username || "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á";
        const data = query.data;

        if (data === "order_product" || data === "custom_order") {
            const user = await findUserByChatId(chatId);
            const orderDetails = await findContentByID(user?.goods);
            const price = orderDetails?.price || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ";
            const category = orderDetails?.category_id || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ";
            const stockStatus = data === "order_product" ? "–≥–æ—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä" : "—ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –¥–∏–∑–∞–π–Ω";

            activeOrderSessions.set(userId, values.admin_chatId);

            bot.sendMessage(
                values.admin_chatId,
                `üõç –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø!
üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: @${username} (ID: ${userId})
üì¶ –¢–æ–≤–∞—Ä: ${category}
üí∞ –¶—ñ–Ω–∞: ${price} –≥—Ä–Ω
üì¶ –°—Ç–∞—Ç—É—Å: ${stockStatus}

üì© –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—á–∏ –Ω–∞ –π–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. /end ${userId} –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É`
            );

            bot.sendMessage(chatId, "‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.");
        }
    });

    bot.on("message", (msg) => {
        const userId = msg.chat.id;
        if (!activeOrderSessions.has(userId)) return;

        if (msg.text) {
            bot.sendMessage(values.admin_chatId, `üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @${msg.from.username || "–ù–µ–≤—ñ–¥–æ–º–∏–π"} (ID: ${userId}):\n${msg.text}`);
        } else if (msg.photo) {
            const fileId = msg.photo[msg.photo.length - 1].file_id;
            bot.sendPhoto(values.admin_chatId, fileId, { caption: `üì∑ –§–æ—Ç–æ –≤—ñ–¥ @${msg.from.username || "–ù–µ–≤—ñ–¥–æ–º–∏–π"} (ID: ${userId})` });
        } else if (msg.document) {
            const fileId = msg.document.file_id;
            bot.sendDocument(values.admin_chatId, fileId, { caption: `üìÑ –î–æ–∫—É–º–µ–Ω—Ç –≤—ñ–¥ @${msg.from.username || "–ù–µ–≤—ñ–¥–æ–º–∏–π"} (ID: ${userId})` });
        } else if (msg.sticker) {
            const fileId = msg.sticker.file_id;
            bot.sendSticker(values.admin_chatId, fileId);
        } else if (msg.voice) {
            const fileId = msg.voice.file_id;
            bot.sendVoice(values.admin_chatId, fileId, { caption: `üé§ –ì–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @${msg.from.username || "–ù–µ–≤—ñ–¥–æ–º–∏–π"} (ID: ${userId})` });
        }
    });

    bot.on("message", (msg) => {
        if (msg.reply_to_message) {
            const match = msg.reply_to_message.text.match(/ID: (\d+)/);
            if (match) {
                const userId = Number(match[1]);
                if (msg.text) {
                    bot.sendMessage(userId, `üì© –ú–µ–Ω–µ–¥–∂–µ—Ä: ${msg.text}`);
                } else if (msg.photo) {
                    const fileId = msg.photo[msg.photo.length - 1].file_id;
                    bot.sendPhoto(userId, fileId, { caption: "üì∑ –í—ñ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞" });
                } else if (msg.document) {
                    const fileId = msg.document.file_id;
                    bot.sendDocument(userId, fileId, { caption: "üìÑ –í—ñ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞" });
                } else if (msg.sticker) {
                    const fileId = msg.sticker.file_id;
                    bot.sendSticker(userId, fileId);
                } else if (msg.voice) {
                    const fileId = msg.voice.file_id;
                    bot.sendVoice(userId, fileId, { caption: "üé§ –í—ñ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞" });
                }
            }
        }
    });

    bot.onText(/\/end (\d+)/, (msg, match) => {
        const userId = Number(match[1]);
        if (activeOrderSessions.has(userId)) {
            activeOrderSessions.delete(userId);
            bot.sendMessage(userId, "üîö –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üôå", {
                reply_markup: {
                    inline_keyboard: [[{ text: "üÜï –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data: "startover" }]]
                }
            });
            bot.sendMessage(values.admin_chatId, `‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (ID: ${userId}) –∑–∞–≤–µ—Ä—à–µ–Ω–æ.`);
        } else {
            bot.sendMessage(values.admin_chatId, "‚ö†Ô∏è –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ü–∏–º ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
        }
    });
};


export default orderManager;
